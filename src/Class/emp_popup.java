/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Class;

import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ART
 */
public class emp_popup extends javax.swing.JFrame {

    /**
     * Creates new form emp_popup
     */
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    java.util.Date date = new java.util.Date();

    public emp_popup() {

        initComponents();
        AddRow();

        this.setLocationRelativeTo(null);

    }

    public void AddRow() {

        Connection con;
        System.out.println(util.getTI());
        try {
            con = ConnectionBuilder.getConnection();
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("Select od.indexs,od.order_id,od.menu_id,dd.date From Orders_detail od "
                    + " Join Menu m on m.menu_id = od.menu_id "
                    + " Join Orders dd on od.order_id = dd.order_id"
                    + " where od.order_id =" + util.getTI() + "");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            Object rowData[] = new Object[4];
            util.getF();
            while (rs.next()) {
                rowData[0] = rs.getInt("indexs");
                rowData[1] = rs.getInt("order_id");
                if (rs.getInt("menu_id") == 1) {
                    rowData[2] = util.getNameF(1);
                } else if (rs.getInt("menu_id") == 2) {
                    rowData[2] = util.getNameF(2);
                } else if (rs.getInt("menu_id") == 3) {
                    rowData[2] = util.getNameF(3);
                } else if (rs.getInt("menu_id") == 4) {
                    rowData[2] = util.getNameF(4);
                } else if (rs.getInt("menu_id") == 5) {
                    rowData[2] = util.getNameF(5);
                } else if (rs.getInt("menu_id") == 6) {
                    rowData[2] = util.getNameF(6);
                } else if (rs.getInt("menu_id") == 7) {
                    rowData[2] = util.getNameF(7);
                } else if (rs.getInt("menu_id") == 8) {
                    rowData[2] = util.getNameF(8);
                } else if (rs.getInt("menu_id") == 9) {
                    rowData[2] = util.getNameF(9);
                }
                rowData[3] = rs.getTimestamp("date");

                model.addRow(rowData);

            }

            stm.close();
            con.close();
            System.out.println("Finnish");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void remRow() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        b = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "OrderID", "Foodname", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 80, 510, 240));

        b.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back.png"))); // NOI18N
        b.setText("jLabel3");
        b.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bMouseClicked(evt);
            }
        });
        getContentPane().add(b, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 40, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/login/b3.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/emp_manger/รายละเอียดเมนู.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2) {
            int index = jTable1.getSelectedRow();
            System.out.println("double clicked");
            System.out.println(index);
            System.out.println(util.getTI());

            int id = (int) jTable1.getValueAt(index, 0);
            try {
                Connection con = ConnectionBuilder.getConnection();
                Statement stm = con.createStatement();
                Statement stm2 = con.createStatement();

                ResultSet rs = stm.executeQuery("Select * FROM Orders od Join Orders_detail odd On od.order_id = odd.order_id WHERE od.order_id = " + util.getTI() + ";");
                ResultSet ra = stm2.executeQuery("Select * From Menu Where menu_id = (select menu_id from Orders_detail where indexs = " + id + ")");
                int orderID = 0;
                float p = 0;
                Date d = null;
                String foodname = "";
                while (rs.next()) {
                    orderID = rs.getInt("order_id");
                    d = rs.getDate("date");
                    //empppppppppppppppppppp

                }
                while (ra.next()) {
                    p = ra.getFloat("price");
                    foodname = ra.getString("foodname");
                }
                stm.executeUpdate("INSERT INTO History(order_id,foodname,price,date_time,emp_user,status) VALUES ('" + orderID + "','" + foodname + "','" + p + "','" + dateFormat.format(date) + "','" + util.getUn() + "','" + "Finnish" + "')");
                stm.executeUpdate("DELETE FROM Orders_detail WHERE indexs = '" + id + "';");

                stm.close();
                con.close();
                System.out.println("Finnish");
                remRow();
                AddRow();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(util.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(util.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void bMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bMouseClicked
        Employee l;
        l = new Employee();
        l.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_bMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

        System.out.println("double clicked");
        int count = jTable1.getModel().getRowCount();

        if (count == 0) {

            try {
                Connection con = ConnectionBuilder.getConnection();
                Statement stm = con.createStatement();

                System.out.println(util.getTI());
                stm.executeUpdate("UPDATE Orders SET status = 1 WHERE order_id = '" + util.getTI() + "'");

                stm.close();
                con.close();
                System.out.println("Finnish");
                Employee l;
                l = new Employee();
                l.setVisible(true);
                this.setVisible(false);

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(util.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(util.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must finish all, Before ending !!");
        }


    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(emp_popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(emp_popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(emp_popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(emp_popup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new emp_popup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel b;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
